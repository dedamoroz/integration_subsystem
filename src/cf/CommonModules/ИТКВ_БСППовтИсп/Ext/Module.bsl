#Область ПрограммныйИнтерфейс

Функция ИспользуетсяБСП() Экспорт
	
	Возврат (ИТКВ_БСПКлиентСерверПовтИсп.ОбщийМодуль("СтандартныеПодсистемыСервер") <> Неопределено);
	
КонецФункции

Функция Версия() Экспорт
	
	Если НЕ ИспользуетсяБСП() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИТКВ_БСПКлиентСервер.ВыполнитьФункцию("СтандартныеПодсистемыСервер.ВерсияБиблиотеки");
	
КонецФункции

Функция СуществуетПодсистема(Имя) Экспорт
	
	Если НЕ ИспользуетсяБСП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Параметры = Новый Массив;
	
	ИмяПодсистемы = ИмяПодсистемы(Имя);
	Параметры.Добавить(ИмяПодсистемы);
	
	Возврат ИТКВ_БСПКлиентСервер.ВыполнитьФункцию("ОбщегоНазначения.ПодсистемаСуществует", Параметры);
	
КонецФункции

Функция Подсистема(Имя) Экспорт
	
	Если НЕ СуществуетПодсистема(Имя) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяПодсистемы = ИмяПодсистемы(Имя);
	ЧастиИмени = СтрРазделить(ИмяПодсистемы, ".");
	
	Результат = Неопределено;
	Для Каждого ЧастьИмени Из ЧастиИмени Цикл
		
		Если Результат = Неопределено Тогда
			Результат = Метаданные.Подсистемы[ЧастьИмени];
		Иначе
			Результат = Результат.Подсистемы[ЧастьИмени];
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция РегламентныеЗаданияЗависимыеОтФункциональныхОпций() Экспорт
	
	Если НЕ СуществуетПодсистема("СтандартныеПодсистемы.РегламентныеЗадания") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИТКВ_БСПКлиентСервер.ВыполнитьФункцию("РегламентныеЗаданияСлужебный.РегламентныеЗаданияЗависимыеОтФункциональныхОпций");
	
КонецФункции

Функция РазделениеВключено() Экспорт
	
	ВерсияБСП = Версия();
	
	Если ИТКВ_ОбщийКлиентСервер.СравнитьВерсии(ВерсияБСП, "2.4") = -1 Тогда
		Результат = РазделениеВключеноБСП2_3();
	Иначе
		Результат = РазделениеВключеноБСП2_4ИВыше();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция РегламентныеЗаданияВМоделиСервиса() Экспорт
	
	Результат = Новый Соответствие;
	Если РазделениеВключено() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПодсистемаРаботаВМоделиСервиса = Подсистема("СтандартныеПодсистемы.РаботаВМоделиСервиса");
	Для Каждого ОбъектМетаданных Из Метаданные.РегламентныеЗадания Цикл
		
		Если НЕ ИТКВ_Метаданные.ВходитВСоставПодсистемы(ПодсистемаРаботаВМоделиСервиса, ОбъектМетаданных) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Вставить(ОбъектМетаданных, Истина);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ИсключенияЗаменыСсылок() Экспорт
	
	Результат = Новый Соответствие;
	
	Если Не ИспользуетсяБСП() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ИмяМодуля = "ОбщегоНазначения";
	Если ИТКВ_ОбщийКлиентСервер.СравнитьВерсии(Версия(), "2.4") = -1 Тогда
		ИмяФункции = "ПолучитьОбщийСписокИсключенийПоискаСсылок";
	Иначе
		ИмяФункции = "ИсключенияПоискаСсылок";
	КонецЕсли;
	
	Возврат ИТКВ_БСПКлиентСервер.ВыполнитьФункцию(ИмяМодуля + "." + ИмяФункции);
	
КонецФункции

Функция АнглийскаяБСП() Экспорт
	
	Возврат НЕ ИТКВ_Общий.ВариантВстроенногоЯзыкаРусский();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РазделениеВключеноБСП2_3()
	
	Модуль = ИТКВ_БСПКлиентСерверПовтИсп.ОбщийМодуль("ОбщегоНазначенияПовтИсп");
	Возврат Модуль.РазделениеВключено();
	
КонецФункции

Функция РазделениеВключеноБСП2_4ИВыше()
	
	Если НЕ СуществуетПодсистема("СтандартныеПодсистемы.РаботаВМоделиСервиса") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ИТКВ_БСПКлиентСервер.ВыполнитьФункцию("РаботаВМоделиСервиса.РазделениеВключено");
	
КонецФункции

Функция ИмяПодсистемы(Имя)
	
	Если ИТКВ_БСПКлиентСерверПовтИсп.РусскаяБСП() Тогда
		Возврат Имя;
	КонецЕсли;
		
	ЧастиИмени = СтрРазделить(Имя, ".");
	Для Индекс = 0 По ЧастиИмени.ВГраница() Цикл
		ЧастиИмени[Индекс] = ИмяПодсистемыНаАнглийском(ЧастиИмени[Индекс]);
	КонецЦикла;
		
	Возврат СтрСоединить(ЧастиИмени, ".");
	
КонецФункции

Функция ИмяПодсистемыНаАнглийском(Имя)
	
	СоответствиеИмен = Новый Соответствие;
	СоответствиеИмен.Вставить("СтандартныеПодсистемы", "StandardSubsystems");
	СоответствиеИмен.Вставить("РегламентныеЗадания", "ScheduledJobs");
	СоответствиеИмен.Вставить("РаботаВМоделиСервиса", "SaaS");
	СоответствиеИмен.Вставить("Свойства", "Properties");
	СоответствиеИмен.Вставить("ЗапретРедактированияРеквизитовОбъектов", "ObjectAttributesLock");
	
	Результат = СоответствиеИмен.Получить(Имя);
	Если Результат = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Неизвестное имя подсистемы %1 для английской БСП", Имя);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
