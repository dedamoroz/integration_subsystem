////////////////////////////////////////////////////////////////////////////////
// инт_ФормированиеИсходящихСообщенийСлужебный
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура - Выполнить обработку сообщений в потоке
//
// Параметры:
//  МассивСообщений     -   Массив   -  Массив уникальных идентификаторов сообщений которые необходимо обработать в потоке.
//
Процедура ВыполнитьОбработкуСообщенийВПотоке(МассивСообщений) Экспорт
    Поток = ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание();
    Если Поток = Неопределено Тогда
        
    	ВызватьИсключение "Процедура <ВыполнитьОбработкуСообщенийВПотоке> не предназначена для интерактивного выполнения. Она должна работать только в рамках фонового задания.";
    КонецЕсли;
    ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.МенеджерПотоковФормированияСообщений", УровеньЖурналаРегистрации.Информация,,,СтрШаблон("Запущена обработка сообщений в потоке с ID <%1>", Поток.УникальныйИдентификатор));

    Для Каждого ИдентификаторСообщения Из МассивСообщений Цикл
        Попытка
            РегистрыСведений.инт_ОчередьИсходящихСообщений.СформироватьСообщениеПоИдентификатору(ИдентификаторСообщения);
            РегистрыСведений.инт_ОчередьИсходящихСообщений.ЗарегистрироватьСообщениеКОтправке(ИдентификаторСообщения);
        Исключение
            СообщениеОбОшибке = СтрШаблон("В потоке с идентификатором <%1> не удалось сформровать сообщение с идентификтором <%2>.
            |
            |Информация об ошибке: %3",
            Поток.УникальныйИдентификатор,
            ИдентификаторСообщения,
            ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
            ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.ПотокФормированияСообщений", УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
        КонецПопытки;
        
    КонецЦикла;
    
    РегистрыСведений.инт_МенеджерПотоковФормированияСообщений.ОбработатьЗавершениеРаботыПотока(Поток.УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
