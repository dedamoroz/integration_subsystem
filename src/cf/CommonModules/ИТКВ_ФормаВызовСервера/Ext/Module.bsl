#Область ПрограммныйИнтерфейс

// Обработка автоподбора значения в форме
//
// Параметры:
//	Текст - Строка - Текст
//	ТипЗначения - ОписаниеТипов, Строка - Тип значения параметра
//	ДанныеВыбора - Неопределено, СписокЗначений - ДанныеВыбора
//
Процедура АвтоПодборЗначения(Текст, ДоступныеТипы, ОграничениеТипа, ДанныеВыбора) Экспорт
	
	ДанныеВыбора = Новый СписокЗначений;
	Ссылки = Новый СписокЗначений;
	
	Если ИТКВ_Строки.ЭтоНавигационнаяСсылка(Текст) Тогда
		
		Ссылка = ИТКВ_Общий.СсылкаПоНавигационнойСсылке(Текст);
		Ссылки.Добавить(Ссылка);
		
	ИначеЕсли ИТКВ_Строки.ЭтоUID(Текст) Тогда
		
		УникальныйИдентификатор = Новый УникальныйИдентификатор(Текст);
		ДобавлениеСсылокПоУникальномуИдентификатору(ДоступныеТипы, Ссылки, УникальныйИдентификатор);
		
	ИначеЕсли ИТКВ_Строки.ЭтоПредставлениеБитаяСсылка(Текст) Тогда
		
		Ссылка = ИТКВ_Общий.СсылкаПоПредставлениюБитойСсылки(Текст);
		Ссылки.Добавить(Ссылка, Текст);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ссылки) Тогда
		Возврат;
	КонецЕсли;
		
	ВставкаОсобыхСсылокВДанныеВыбора(ДоступныеТипы, ДанныеВыбора, Ссылки);
	
КонецПроцедуры

Функция ПолноеИмяФормыВыбораОбъекта(Объект, ИмяФормы = "ФормаОбъекта") Экспорт
	
	Если ТипЗнч(Объект) = Тип("ОписаниеТипов") Тогда
		
		Ссылка = Новый (ИТКВ_ТипыКлиентСервер.ПервыйСсылочный(Объект));
		
	Иначе
		
		Ссылка = Объект;
		
	КонецЕсли;

	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка));
	Если ОбъектМетаданных = Неопределено Тогда
		Результат = Неопределено;
	Иначе
		Результат = СтрШаблон("%1.%2", ОбъектМетаданных.ПолноеИмя(), ИмяФормы);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОтборПоТипамСсылок(Параметр) Экспорт
	
	Результат = Новый Массив;
	
	Если ТипЗнч(Параметр) = Тип("Массив") Тогда

		Для Каждого Ссылка Из Параметр Цикл
			
			ПолноеИмяОбъектаМетаданных = ИТКВ_Метаданные.ПолноеИмя(Ссылка.Метаданные());
			Если Результат.Найти(ПолноеИмяОбъектаМетаданных) = Неопределено Тогда
				
				Результат.Добавить(ПолноеИмяОбъектаМетаданных);
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("Тип")	Тогда
		
		ОбъектаМетаданных = Метаданные.НайтиПоТипу(Параметр);
		Результат.Добавить(ИТКВ_Метаданные.ПолноеИмя(ОбъектаМетаданных));
		
	Иначе
		
		ПолноеИмяОбъектаМетаданных = ИТКВ_Метаданные.ПолноеИмя(Параметр.Метаданные());
		Результат.Добавить(ПолноеИмяОбъектаМетаданных);
		
	КонецЕсли;
	
	Возврат СтрСоединить(Результат, ", ");
	
КонецФункции

Процедура ЗаполнитьСписокПользователей(Приемник) Экспорт
	
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого Пользователь Из ПользователиИБ Цикл
		
		Приемник.Добавить(Пользователь.Имя);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВставкаОсобыхСсылокВДанныеВыбора(ДоступныеТипы, ДанныеВыбора, Ссылки)
	
	Если Не ЗначениеЗаполнено(Ссылки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеСсылки Из Ссылки Цикл
		
		Ссылка = ОписаниеСсылки.Значение;
		Тип = ТипЗнч(Ссылка);
		Если Не ЗначениеЗаполнено(Ссылка)
				ИЛИ (ЗначениеЗаполнено(ДоступныеТипы) И Не ДоступныеТипы.СодержитТип(Тип)) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСсылки = Новый Структура;
		ДанныеСсылки.Вставить("Тип", "ОсобаяСсылка");
		ДанныеСсылки.Вставить("Ссылка", Ссылка);
		
		Представление = ОписаниеСсылки.Представление;
		Если Не ЗначениеЗаполнено(Представление) Тогда
			Представление = Ссылка;
		КонецЕсли;
		
		ДанныеВыбора.Добавить(ДанныеСсылки, Представление);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавлениеСсылокПоУникальномуИдентификатору(ДоступныеТипы, Ссылки, УникальныйИдентификатор)
	
	ПакетЗапросов = Новый Массив;
	
	ЧастиЗапроса = Новый Массив;
	Запрос = Новый Запрос;
	НомерЗапроса = 1;
	
	ОбщиеПараметры = Новый Структура;
	ОбщиеПараметры.Вставить("Запрос", Запрос);
	ОбщиеПараметры.Вставить("ПакетЗапросов", ПакетЗапросов);
	ОбщиеПараметры.Вставить("ЧастиЗапроса", ЧастиЗапроса);
	ОбщиеПараметры.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
	// Собираем запрос
	Если ЗначениеЗаполнено(ДоступныеТипы) Тогда
		
		Для Каждого Тип Из ДоступныеТипы.Типы() Цикл
			
			Если Не ИТКВ_ТипыКлиентСервер.ЭтоСсылочный(Тип, Истина) Тогда
				Продолжить;
			КонецЕсли;
			
			ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
			ИмяОбъектаКоллекции = ИТКВ_Метаданные.ИмяОбъектаКоллекции(ОбъектМетаданных);
			Менеджер = ИТКВ_Метаданные.МенеджерОбъектаПоПолномуИмени(ОбъектМетаданных.ПолноеИмя());
			
			ДобавлениеЗапросаПоиска(ОбщиеПараметры, НомерЗапроса, Менеджер, ИмяОбъектаКоллекции, ОбъектМетаданных);
			
		КонецЦикла;
		
	Иначе
		
		ОписаниеСсылочныхТипов = ИТКВ_МетаданныеПовтИсп.ОписаниеСсылочныхТипов();
		Для Каждого ОписаниеСсылочногоТипа Из ОписаниеСсылочныхТипов Цикл
			
			Для Каждого ОбъектМетаданных Из ОписаниеСсылочногоТипа.Метаданные Цикл
				
				ИмяОбъектаКоллекции = ОписаниеСсылочногоТипа.Имя;
				Имя = ОбъектМетаданных.Имя;
				Менеджер = ОписаниеСсылочногоТипа.Менеджер[Имя];

				ДобавлениеЗапросаПоиска(ОбщиеПараметры, НомерЗапроса, Менеджер, ИмяОбъектаКоллекции, ОбъектМетаданных);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЧастиЗапроса) Тогда
		ДобавлениеЗапросовПоискаВПакет(ПакетЗапросов, ЧастиЗапроса);
	КонецЕсли;
	
	// Выполняем запросы
	Для Каждого ЗапросПакета Из ПакетЗапросов Цикл
		
		Запрос.Текст = ЗапросПакета;
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Ссылки.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавлениеЗапросаПоиска(ОбщиеПараметры, НомерЗапроса, Менеджер, ИмяОбъектаКоллекции, ОбъектМетаданных)
	
	Если НЕ ПравоДоступа("Чтение", ОбъектМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбъекта = ОбъектМетаданных.Имя;
	
	ШаблонЗапроса = "ВЫБРАТЬ Ссылка ИЗ %1.%2 КАК Т ГДЕ Ссылка = &%3";
	ШаблонПараметра = "П%1";
	МаксимальныйРазмерПакета = 200;
	
	Запрос = ОбщиеПараметры.Запрос;
	ПакетЗапросов = ОбщиеПараметры.ПакетЗапросов;
	ЧастиЗапроса = ОбщиеПараметры.ЧастиЗапроса;
	УникальныйИдентификатор = ОбщиеПараметры.УникальныйИдентификатор;
	
	ИмяПараметра = СтрШаблон(ШаблонПараметра, Формат(НомерЗапроса, "ЧГ="));
	Ссылка = Менеджер.ПолучитьСсылку(УникальныйИдентификатор);
	Запрос.УстановитьПараметр(ИмяПараметра, Ссылка);
	
	ТекстЗапроса = СтрШаблон(ШаблонЗапроса, ИмяОбъектаКоллекции, ИмяОбъекта, ИмяПараметра);
	ЧастиЗапроса.Добавить(ТекстЗапроса);
	
	Если НомерЗапроса % МаксимальныйРазмерПакета = 0 Тогда
		ДобавлениеЗапросовПоискаВПакет(ПакетЗапросов, ЧастиЗапроса);
	КонецЕсли;
	
	НомерЗапроса = НомерЗапроса + 1;
	
КонецПроцедуры

Процедура ДобавлениеЗапросовПоискаВПакет(ПакетЗапросов, ЧастиЗапроса)
	
	ТекстЗапросаПакета = СтрСоединить(ЧастиЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");
	ПакетЗапросов.Добавить(ТекстЗапросаПакета);
	ЧастиЗапроса.Очистить();
	
КонецПроцедуры

#КонецОбласти
