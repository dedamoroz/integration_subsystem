#Область ПрограммныйИнтерфейс

Функция Картинка(Имя) Экспорт
	
	Если ЭтоПоследовательность(Имя) Тогда
		
		Результат = БиблиотекаКартинок.ИТКВ_Последовательность;
		
	ИначеЕсли ЭтоТочкаМаршрутаБизнесПроцесса(Имя) Тогда
		
		Результат = БиблиотекаКартинок.ИТКВ_ТочкаМаршрутаБизнессПроцесса;
		
	Иначе
		
		Результат = БиблиотекаКартинок[Имя];
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получает имя коллекции метаданных по имени объекта коллекции метаданных
//
// Параметры:
//  Имя  - Строка - Имя объекта коллекции
//  Язык  - Строка - Язык
//
// Возвращаемое значение:
//   Строка - имя коллекции метаданных
//
Функция ИмяКоллекции(Имя, Язык = Неопределено) Экспорт
	
	Если Язык = Неопределено Тогда
		Язык = ИТКВ_ОбщийКлиентСервер.КодТекущегоЯзыка();
	КонецЕсли;
	
	Если ЭтоСправочник(Имя) Тогда
		
		Результат = ИмяКоллекцииСправочники(Язык);
		
	ИначеЕсли ЭтоДокумент(Имя) Тогда
		
		Результат = ИмяКоллекцииДокументы(Язык);
		
	ИначеЕсли ЭтоПеречисление(Имя) Тогда
		
		Результат = ИмяКоллекцииПеречисления(Язык);
		
	ИначеЕсли ЭтоКонстанта(Имя) Тогда
		
		Результат = ИмяКоллекцииКонстанты(Язык);
		
	ИначеЕсли ЭтоЖурналДокументов(Имя) Тогда
		
		Результат = ИмяКоллекцииЖурналыДокументов(Язык);
		
	ИначеЕсли ЭтоКритерийОтбора(Имя) Тогда
		
		Результат = ИмяКоллекцииКритерииОтбора(Язык);
		
	ИначеЕсли ЭтоПланОбмена(Имя) Тогда
		
		Результат = ИмяКоллекцииПланыОбмена(Язык);
		
	ИначеЕсли ЭтоПоследовательность(Имя) Тогда
		
		Результат = ИмяКоллекцииПоследовательности(Язык);
		
	ИначеЕсли ЭтоПланВидовХарактеристик(Имя) Тогда
		
		Результат = ИмяКоллекцииПланыВидовХарактеристик(Язык);
		
	ИначеЕсли ЭтоПланВидовРасчета(Имя) Тогда
		
		Результат = ИмяКоллекцииПланыВидовРасчета(Язык);
		
	ИначеЕсли ЭтоПланСчетов(Имя) Тогда
		
		Результат = ИмяКоллекцииПланыСчетов(Язык);
		
	ИначеЕсли ЭтоРегистрСведений(Имя) Тогда
		
		Результат = ИмяКоллекцииРегистрыСведений(Язык);
		
	ИначеЕсли ЭтоРегистрНакопления(Имя) Тогда
		
		Результат = ИмяКоллекцииРегистрыНакопления(Язык);
		
	ИначеЕсли ЭтоРегистрБухгалтерии(Имя) Тогда
		
		Результат = ИмяКоллекцииРегистрыБухгалтерии(Язык);
		
	ИначеЕсли ЭтоРегистрРасчета(Имя) Тогда
		
		Результат = ИмяКоллекцииРегистрыРасчета(Язык);
		
	ИначеЕсли ЭтоБизнесПроцесс(Имя) Тогда
		
		Результат = ИмяКоллекцииБизнесПроцессы(Язык);
		
	ИначеЕсли ЭтоТочкаМаршрутаБизнесПроцесса(Имя) Тогда
		
		Результат = ИмяКоллекцииТочкиМаршрутаБизнесПроцесса(Язык);
		
	ИначеЕсли ЭтоЗадача(Имя) Тогда
		
		Результат = ИмяКоллекцииЗадачи(Язык);
		
	ИначеЕсли ЭтоОбработка(Имя) Тогда
		
		Результат = ИмяКоллекцииОбработки(Язык);
		
	ИначеЕсли ЭтоОтчет(Имя) Тогда
		
		Результат = ИмяКоллекцииОтчеты(Язык);
		
	ИначеЕсли ЭтоОбщийМодуль(Имя) Тогда
		
		Результат = ИмяКоллекцииОбщиеМодули(Язык)
		
	ИначеЕсли ЭтоХранилищеНастроек(Имя) Тогда
		
		Результат = ИмяКоллекцииХранилищаНастроек(Язык);
		
	Иначе
		
		ВызватьИсключение СтрШаблон("Неподдерживаемый тип объекта метаданных: %1", Имя);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяОбъектаКоллекции(Имя, Язык = Неопределено) Экспорт
	
	Если Язык = Неопределено Тогда
		Язык = ИТКВ_ОбщийКлиентСервер.КодТекущегоЯзыка();
	КонецЕсли;
	
	Если ЭтоСправочник(Имя) Тогда
		
		Результат = ИмяОбъектаСправочник(Язык);
		
	ИначеЕсли ЭтоДокумент(Имя) Тогда
		
		Результат = ИмяОбъектаДокумент(Язык);
		
	ИначеЕсли ЭтоПеречисление(Имя) Тогда
		
		Результат = ИмяОбъектаПеречисление(Язык);
		
	ИначеЕсли ЭтоКонстанта(Имя) Тогда
		
		Результат = ИмяОбъектаКонстанта(Язык);
		
	ИначеЕсли ЭтоЖурналДокументов(Имя) Тогда
		
		Результат = ИмяОбъектаЖурналДокументов(Язык);
		
	ИначеЕсли ЭтоКритерийОтбора(Имя) Тогда
		
		Результат = ИмяОбъектаКритерийОтбора(Язык);
		
	ИначеЕсли ЭтоПланОбмена(Имя) Тогда
		
		Результат = ИмяОбъектаПланОбмена(Язык);
		
	ИначеЕсли ЭтоПоследовательность(Имя) Тогда
		
		Результат = ИмяОбъектаПоследовательность(Язык);
		
	ИначеЕсли ЭтоПланВидовХарактеристик(Имя) Тогда
		
		Результат = ИмяОбъектаПланВидовХарактеристик(Язык);
		
	ИначеЕсли ЭтоПланВидовРасчета(Имя) Тогда
		
		Результат = ИмяОбъектаПланВидовРасчета(Язык);
		
	ИначеЕсли ЭтоПланСчетов(Имя) Тогда
		
		Результат = ИмяОбъектаПланСчетов(Язык);
		
	ИначеЕсли ЭтоРегистрСведений(Имя) Тогда
		
		Результат = ИмяОбъектаРегистрСведений(Язык);
		
	ИначеЕсли ЭтоРегистрНакопления(Имя) Тогда
		
		Результат = ИмяОбъектаРегистрНакопления(Язык);
		
	ИначеЕсли ЭтоРегистрБухгалтерии(Имя) Тогда
		
		Результат = ИмяОбъектаРегистрБухгалтерии(Язык);
		
	ИначеЕсли ЭтоРегистрРасчета(Имя) Тогда
		
		Результат = ИмяОбъектаРегистрРасчета(Язык);
		
	ИначеЕсли ЭтоБизнесПроцесс(Имя) Тогда
		
		Результат = ИмяОбъектаБизнесПроцесс(Язык);
		
	ИначеЕсли ЭтоТочкаМаршрутаБизнесПроцесса(Имя) Тогда
		
		Результат = ИмяОбъектаТочкаМаршрутаБизнесПроцесса(Язык);
		
	ИначеЕсли ЭтоЗадача(Имя) Тогда
		
		Результат = ИмяОбъектаЗадача(Язык);
		
	ИначеЕсли ЭтоОбщийМодуль(Имя) Тогда
		
		Результат = ИмяОбъектаОбщийМодуль(Язык);
		
	ИначеЕсли ЭтоОбработка(Имя) Тогда
		
		Результат = ИмяОбъектаОбработка(Язык);
		
	ИначеЕсли ЭтоОтчет(Имя) Тогда
		
		Результат = ИмяОбъектаОтчет(Язык);
		
	ИначеЕсли ЭтоХранилищеНастроек(Имя) Тогда
		
		Результат = ИмяОбъектаХранилищеНастроек(Язык);
		
	Иначе
		
		Результат = "";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяОбъектаТочкаМаршрутаБизнесПроцесса(Язык = "ru") Экспорт
	
	Возврат НСтр("ru = 'ТочкаМаршрутаБизнесПроцесса'; en = 'BusinessProcessRoutePoint'", Язык);
	
КонецФункции

Функция ПорядокОбъектаКоллекции(Имя) Экспорт
	
	ЯзыкАнглийский = ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский();
	
	ПорядокОбъектов = Новый Соответствие;
	
	Порядок = 0;
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаКонстанта(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаКонстанта(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаСправочник(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаСправочник(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаДокумент(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаДокумент(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПоследовательность(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПоследовательность(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПеречисление(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПеречисление(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаОтчет(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаОтчет(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаОбработка(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаОбработка(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПланВидовХарактеристик(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПланВидовХарактеристик(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПланСчетов(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПланСчетов(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПланВидовРасчета(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПланВидовРасчета(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрСведений(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрСведений(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрНакопления(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрНакопления(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрБухгалтерии(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрБухгалтерии(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрРасчета(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаРегистрРасчета(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаПланОбмена(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаПланОбмена(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаКритерийОтбора(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаКритерийОтбора(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаБизнесПроцесс(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаБизнесПроцесс(ЯзыкАнглийский), Порядок);
	
	Порядок = Порядок + 1;
	ПорядокОбъектов.Вставить(ИмяОбъектаЗадача(), Порядок);
	ПорядокОбъектов.Вставить(ИмяОбъектаЗадача(ЯзыкАнглийский), Порядок);
	
	Возврат ПорядокОбъектов.Получить(Имя);

КонецФункции

Функция ПорядокКоллекции(Имя) Экспорт
	
	ПорядокКоллекций = СоответствиеПорядокКоллекций();
	
	Результат = ПорядокКоллекций.Получить(Имя);
	Если Результат = Неопределено Тогда
		ВызватьИсключение "Неизвестное имя коллекции при определении порядка";
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

Функция СоответствиеПорядокКоллекций() Экспорт
	
	ЯзыкАнглийский = ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский();
	
	Порядок = 0;
	Результат = Новый Соответствие;
	
	Результат.Вставить(ИмяКоллекцииКонстанты(), Порядок);
	Результат.Вставить(ИмяКоллекцииКонстанты(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;

	Результат.Вставить(ИмяКоллекцииСправочники(), Порядок);
	Результат.Вставить(ИмяКоллекцииСправочники(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииДокументы(), Порядок);
	Результат.Вставить(ИмяКоллекцииДокументы(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииЖурналыДокументов(), Порядок);
	Результат.Вставить(ИмяКоллекцииЖурналыДокументов(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииОтчеты(), Порядок);
	Результат.Вставить(ИмяКоллекцииОтчеты(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииОбработки(), Порядок);
	Результат.Вставить(ИмяКоллекцииОбработки(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииПланыВидовХарактеристик(), Порядок);
	Результат.Вставить(ИмяКоллекцииПланыВидовХарактеристик(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииПланыСчетов(), Порядок);
	Результат.Вставить(ИмяКоллекцииПланыСчетов(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииПланыВидовРасчета(), Порядок);
	Результат.Вставить(ИмяКоллекцииПланыВидовРасчета(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииРегистрыСведений(), Порядок);
	Результат.Вставить(ИмяКоллекцииРегистрыСведений(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;

	Результат.Вставить(ИмяКоллекцииРегистрыНакопления(), Порядок);
	Результат.Вставить(ИмяКоллекцииРегистрыНакопления(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииРегистрыБухгалтерии(), Порядок);
	Результат.Вставить(ИмяКоллекцииРегистрыБухгалтерии(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииРегистрыРасчета(), Порядок);
	Результат.Вставить(ИмяКоллекцииРегистрыРасчета(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииБизнесПроцессы(), Порядок);
	Результат.Вставить(ИмяКоллекцииБизнесПроцессы(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;

	Результат.Вставить(ИмяКоллекцииЗадачи(), Порядок);
	Результат.Вставить(ИмяКоллекцииЗадачи(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Результат.Вставить(ИмяКоллекцииПланыОбмена(), Порядок);
	Результат.Вставить(ИмяКоллекцииПланыОбмена(ЯзыкАнглийский), Порядок);
	Порядок = Порядок + 1;
	
	Возврат Результат;
	
КонецФункции

// Возвращает доступные типы объекта
//
// Параметры:
//   Язык - Строка - Код языка
//
// Возвращаемое значение:
//   Массив - Строки доступных типов объектов
//
Функция ДоступныеТипыОбъекта(Язык = "ru") Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(ИмяОбъектаСправочник(Язык));
	Результат.Добавить(ИмяОбъектаДокумент(Язык));
	Результат.Добавить(ИмяОбъектаПеречисление(Язык));
	Результат.Добавить(ИмяОбъектаПланВидовХарактеристик(Язык));
	Результат.Добавить(ИмяОбъектаПланСчетов(Язык));
	Результат.Добавить(ИмяОбъектаПланВидовРасчета(Язык));
	Результат.Добавить(ИмяОбъектаПланОбмена(Язык));
	Результат.Добавить(ИмяОбъектаБизнесПроцесс(Язык));
	Результат.Добавить(ИмяОбъектаТочкаМаршрутаБизнесПроцесса(Язык));
	Результат.Добавить(ИмяОбъектаЗадача(Язык));
	
	Возврат Результат;
	
КонецФункции

Функция ДоступныеОбъектыИсточникаПодписки(Язык = "ru") Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(ИмяОбъектаКонстанта(Язык));
	Результат.Добавить(ИмяОбъектаСправочник(Язык));
	Результат.Добавить(ИмяОбъектаДокумент(Язык));
	Результат.Добавить(ИмяОбъектаЖурналДокументов(Язык));
	Результат.Добавить(ИмяОбъектаПеречисление(Язык));
	Результат.Добавить(ИмяОбъектаОтчет(Язык));
	Результат.Добавить(ИмяОбъектаОбработка(Язык));
	Результат.Добавить(ИмяОбъектаПланВидовХарактеристик(Язык));
	Результат.Добавить(ИмяОбъектаПланСчетов(Язык));
	Результат.Добавить(ИмяОбъектаПланВидовРасчета(Язык));
	Результат.Добавить(ИмяОбъектаРегистрСведений(Язык));
	Результат.Добавить(ИмяОбъектаРегистрНакопления(Язык));
	Результат.Добавить(ИмяОбъектаРегистрБухгалтерии(Язык));
	Результат.Добавить(ИмяОбъектаРегистрРасчета(Язык));
	Результат.Добавить(ИмяОбъектаБизнесПроцесс(Язык));
	Результат.Добавить(ИмяОбъектаЗадача(Язык));
	Результат.Добавить(ИмяОбъектаПланОбмена(Язык));
	Результат.Добавить(ИмяОбъектаКритерийОтбора(Язык));
	Результат.Добавить(ИмяОбъектаПоследовательность(Язык));
	Результат.Добавить(ИмяОбъектаХранилищеНастроек(Язык));
	
	Возврат Результат;
	
КонецФункции

Функция ДоступныеКоллекцииВсеДействия(Язык = Неопределено) Экспорт
	
	Если Язык = Неопределено Тогда
		Язык = ИТКВ_ОбщийКлиентСервер.КодТекущегоЯзыка();
	КонецЕсли;
	
	Результат = Новый Массив;
	Результат.Добавить(ИмяКоллекцииКонстанты(Язык));
	Результат.Добавить(ИмяКоллекцииСправочники(Язык));
	Результат.Добавить(ИмяКоллекцииДокументы(Язык));
	Результат.Добавить(ИмяКоллекцииЖурналыДокументов(Язык));
	Результат.Добавить(ИмяКоллекцииОтчеты(Язык));
	Результат.Добавить(ИмяКоллекцииОбработки(Язык));
	Результат.Добавить(ИмяКоллекцииПланыВидовХарактеристик(Язык));
	Результат.Добавить(ИмяКоллекцииПланыСчетов(Язык));
	Результат.Добавить(ИмяКоллекцииПланыВидовРасчета(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыСведений(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыНакопления(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыБухгалтерии(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыРасчета(Язык));
	Результат.Добавить(ИмяКоллекцииБизнесПроцессы(Язык));
	Результат.Добавить(ИмяКоллекцииЗадачи(Язык));
	Результат.Добавить(ИмяКоллекцииПланыОбмена(Язык));
	
	Возврат Результат;
	
КонецФункции

Функция ДоступныеКоллекцииАнализПравДоступа(Язык = "ru") Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(ИмяКоллекцииКонстанты(Язык));
	Результат.Добавить(ИмяКоллекцииСправочники(Язык));
	Результат.Добавить(ИмяКоллекцииДокументы(Язык));
	Результат.Добавить(ИмяКоллекцииЖурналыДокументов(Язык));
	Результат.Добавить(ИмяКоллекцииОтчеты(Язык));
	Результат.Добавить(ИмяКоллекцииОбработки(Язык));
	Результат.Добавить(ИмяКоллекцииПланыВидовХарактеристик(Язык));
	Результат.Добавить(ИмяКоллекцииПланыСчетов(Язык));
	Результат.Добавить(ИмяКоллекцииПланыВидовРасчета(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыСведений(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыНакопления(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыБухгалтерии(Язык));
	Результат.Добавить(ИмяКоллекцииРегистрыРасчета(Язык));
	Результат.Добавить(ИмяКоллекцииБизнесПроцессы(Язык));
	Результат.Добавить(ИмяКоллекцииЗадачи(Язык));
	Результат.Добавить(ИмяКоллекцииПланыОбмена(Язык));
	
	Возврат Результат;
	
КонецФункции

// Возвращает по объекту метаданных доступны ли для него предопределенные элементы
//
// Параметры:
//   Имя - Строка - Имя объекта метаданных
//
// Возвращаемое значение:
//   Булево - Истина, доступны предопределенные элементы
//
Функция ОбъектCПредопределенными(Имя) Экспорт

	Возврат ЭтоСправочник(Имя)
				ИЛИ ЭтоПеречисление(Имя)
				ИЛИ ЭтоПланВидовХарактеристик(Имя)
				ИЛИ ЭтоПланСчетов(Имя)
				ИЛИ ЭтоПланВидовРасчета(Имя);

КонецФункции
			
Функция ИмеетСтандартныеРеквизиты(Имя) Экспорт
	
	Возврат ЭтоСправочник(Имя)
				ИЛИ ЭтоДокумент(Имя)
				ИЛИ ЭтоБизнесПроцесс(Имя)
				ИЛИ ЭтоЖурналДокументов(Имя)
				ИЛИ ЭтоЗадача(Имя)
				ИЛИ ЭтоПеречисление(Имя)
				ИЛИ ЭтоПланВидовРасчета(Имя)
				ИЛИ ЭтоПланСчетов(Имя)
				ИЛИ ЭтоПланВидовХарактеристик(Имя)
				ИЛИ ЭтоПланОбмена(Имя)
				ИЛИ ЭтоРегистрБухгалтерии(Имя)
				ИЛИ ЭтоРегистрНакопления(Имя)
				ИЛИ ЭтоРегистрРасчета(Имя)
				ИЛИ ЭтоРегистрСведений(Имя);
				
КонецФункции

Функция ИмеетТабличныеЧасти(Имя) Экспорт
	
	Возврат ЭтоСправочник(Имя)
				ИЛИ ЭтоДокумент(Имя)
				ИЛИ ЭтоБизнесПроцесс(Имя)
				ИЛИ ЭтоЗадача(Имя)
				ИЛИ ЭтоПланВидовРасчета(Имя)
				ИЛИ ЭтоПланСчетов(Имя)
				ИЛИ ЭтоПланВидовХарактеристик(Имя)
				ИЛИ ЭтоПланОбмена(Имя);
				
КонецФункции

Функция ИмеетСтандартныеТабличныеЧасти(Имя) Экспорт
	
	Возврат ЭтоПланВидовРасчета(Имя)
				ИЛИ ЭтоПланСчетов(Имя);
				
КонецФункции

Функция ЭтоСправочник(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаСправочник() ИЛИ Имя = ИмяОбъектаСправочник(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииСправочники() ИЛИ Имя = ИмяКоллекцииСправочники(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоДокумент(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаДокумент() ИЛИ Имя = ИмяОбъектаДокумент(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииДокументы() ИЛИ Имя = ИмяКоллекцииДокументы(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоБизнесПроцесс(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаБизнесПроцесс() ИЛИ Имя = ИмяОбъектаБизнесПроцесс(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииБизнесПроцессы() ИЛИ Имя = ИмяКоллекцииБизнесПроцессы(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоЗадача(Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаЗадача() ИЛИ Имя = ИмяОбъектаЗадача(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииЗадачи() ИЛИ Имя = ИмяКоллекцииЗадачи(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоОбщийМодуль(Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаОбщийМодуль() ИЛИ Имя = ИмяОбъектаОбщийМодуль(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииОбщиеМодули() ИЛИ Имя = ИмяКоллекцииОбщиеМодули(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоОбработка(Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаОбработка() ИЛИ Имя = ИмяОбъектаОбработка(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииОбработки() ИЛИ Имя = ИмяКоллекцииОбработки(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоОтчет(Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаОтчет() ИЛИ Имя = ИмяОбъектаОтчет(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииОтчеты() ИЛИ Имя = ИмяКоллекцииОтчеты(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоХранилищеНастроек(Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаХранилищеНастроек() ИЛИ Имя = ИмяОбъектаХранилищеНастроек(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоПланВидовХарактеристик(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПланВидовХарактеристик() ИЛИ Имя = ИмяОбъектаПланВидовХарактеристик(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПланыВидовХарактеристик() ИЛИ Имя = ИмяКоллекцииПланыВидовХарактеристик(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоПланВидовРасчета(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПланВидовРасчета() ИЛИ Имя = ИмяОбъектаПланВидовРасчета(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПланыВидовРасчета() ИЛИ Имя = ИмяКоллекцииПланыВидовРасчета(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоПланСчетов(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПланСчетов() ИЛИ Имя = ИмяОбъектаПланСчетов(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПланыСчетов() ИЛИ Имя = ИмяКоллекцииПланыСчетов(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоПланОбмена(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПланОбмена() ИЛИ Имя = ИмяОбъектаПланОбмена(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПланыОбмена() ИЛИ Имя = ИмяКоллекцииПланыОбмена(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоКритерийОтбора(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаКритерийОтбора() ИЛИ Имя = ИмяОбъектаКритерийОтбора(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииКритерииОтбора() ИЛИ Имя = ИмяКоллекцииКритерииОтбора(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоКонстанта(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаКонстанта() ИЛИ Имя = ИмяОбъектаКонстанта(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииКонстанты() ИЛИ Имя = ИмяКоллекцииКонстанты(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоЖурналДокументов(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаЖурналДокументов() ИЛИ Имя = ИмяОбъектаЖурналДокументов(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииЖурналыДокументов() ИЛИ Имя = ИмяКоллекцииЖурналыДокументов(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоПоследовательность(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПоследовательность() ИЛИ Имя = ИмяОбъектаПоследовательность(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПоследовательности() ИЛИ Имя = ИмяКоллекцииПоследовательности(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоТочкаМаршрутаБизнесПроцесса(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаТочкаМаршрутаБизнесПроцесса() ИЛИ Имя = ИмяОбъектаТочкаМаршрутаБизнесПроцесса(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииТочкиМаршрутаБизнесПроцесса() ИЛИ Имя = ИмяКоллекцииТочкиМаршрутаБизнесПроцесса(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

// Определяет этот объект перечисление
//
// Параметры:
//   Имя - Строка - Объект метаданных
//
// Возвращаемое значение:
//   Булево - Истина, это перечисление
//
Функция ЭтоПеречисление(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаПеречисление() ИЛИ Имя = ИмяОбъектаПеречисление(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииПеречисления() ИЛИ Имя = ИмяКоллекцииПеречисления(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

// Определяет этот объект регистр сведений
//
// Параметры:
//   ИмяОбъекта - Строка - Объект метаданных
//
// Возвращаемое значение:
//   Булево - Истина, это регистр сведений
//
Функция ЭтоРегистрСведений(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаРегистрСведений() ИЛИ Имя = ИмяОбъектаРегистрСведений(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииРегистрыСведений() ИЛИ Имя = ИмяКоллекцииРегистрыСведений(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));

КонецФункции

Функция ЭтоРегистрНакопления(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаРегистрНакопления() ИЛИ Имя = ИмяОбъектаРегистрНакопления(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииРегистрыНакопления() ИЛИ Имя = ИмяКоллекцииРегистрыНакопления(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоРегистрБухгалтерии(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаРегистрБухгалтерии() ИЛИ Имя = ИмяОбъектаРегистрБухгалтерии(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииРегистрыБухгалтерии() ИЛИ Имя = ИмяКоллекцииРегистрыБухгалтерии(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоРегистрРасчета(Знач Имя) Экспорт
	
	Возврат (Имя = ИмяОбъектаРегистрРасчета() ИЛИ Имя = ИмяОбъектаРегистрРасчета(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский())
				ИЛИ Имя = ИмяКоллекцииРегистрыРасчета() ИЛИ Имя = ИмяКоллекцииРегистрыРасчета(ИТКВ_ОбщийКлиентСервер.КодЯзыкаАнглийский()));
	
КонецФункции

Функция ЭтоРегистр(Знач Имя) Экспорт
	
	Возврат ЭтоРегистрНакопления(Имя)
			ИЛИ ЭтоРегистрБухгалтерии(Имя)
			ИЛИ ЭтоРегистрСведений(Имя)
			ИЛИ ЭтоРегистрРасчета(Имя);
	
КонецФункции

Функция ЭтоСсылочныйОбъект(Знач Имя) Экспорт

	Возврат ЭтоСправочник(Имя)
			ИЛИ ЭтоДокумент(Имя)
			ИЛИ ЭтоПланВидовХарактеристик(Имя)
			ИЛИ ЭтоПланСчетов(Имя)
			ИЛИ ЭтоПланВидовРасчета(Имя)
			ИЛИ ЭтоПланОбмена(Имя)
			ИЛИ ЭтоБизнесПроцесс(Имя)
			ИЛИ ЭтоЗадача(Имя);
	
КонецФункции

Функция ЭтоПолноеИмяОбъекта(Имя) Экспорт
	
	Возврат Булево(СтрНайти(Имя, "."));
	
КонецФункции

Функция МаксимальнаяДлинаИмени() Экспорт
	
	// https://its.1c.ru/db/metod8dev/content/5293/hdoc
	// Максимальная длина имен объектов метаданных
	// В "1С:Предприятии 8.3" (версия 8.3.7) введено ограничение длины имени объекта метаданных в 80 символов.
	// Это требование предъявляется к новым объектам метаданных и при изменении имени существующих.
	
	Возврат 80;
	
КонецФункции

Функция МаксимальнаяДлинаСинонима() Экспорт
	
	Возврат 200;
	
КонецФункции

Функция МаксимальнаяДлинаПодсказки() Экспорт
	
	Возврат 1000;
	
КонецФункции

Функция МаксимальнаяДлинаСтроки() Экспорт
	
	Возврат 1024;
	
КонецФункции

Функция МаксимальнаяДлинаФиксированнойСтроки() Экспорт
	
	Возврат 100;
	
КонецФункции

Функция ДополнениеКоллекцииИсточникаПодписки(Событие, Имя) Экспорт
	
	СобытияМенеджера = Новый Массив;
	СобытияМенеджера.Добавить("ОбработкаПолученияДанныхВыбора");
	СобытияМенеджера.Добавить("ОбработкаПолученияФормы");
	СобытияМенеджера.Добавить("ОбработкаПолученияПолейПредставления");
	СобытияМенеджера.Добавить("ОбработкаПолученияПредставления");
	СобытияМенеджера.Добавить("ОбработкаПослеЗаписиВерсийИсторииДанных");
	
	ТекстОбъект = НСтр("ru = 'объект'; en = 'object'");
	ТекстМенеджер = НСтр("ru = 'менеджер'; en = 'manager'");
	ТекстНаборЗаписей = НСтр("ru = 'набор записей'; en = 'recordset'");
	
	Если ЭтоСправочник(Имя)
			ИЛИ ЭтоДокумент(Имя)
			ИЛИ ЭтоПланВидовХарактеристик(Имя)
			ИЛИ ЭтоПланСчетов(Имя)
			ИЛИ ЭтоПланВидовРасчета(Имя)
			ИЛИ ЭтоБизнесПроцесс(Имя)
			ИЛИ ЭтоЗадача(Имя)
			ИЛИ ЭтоПланОбмена(Имя) Тогда
		
		Если СобытияМенеджера.Найти(Событие) <> Неопределено Тогда
				
			Результат = ТекстМенеджер;
			
		Иначе
			
			Результат = ТекстОбъект;

		КонецЕсли;
		
	ИначеЕсли ЭтоРегистр(Имя) Тогда
		
		Если СобытияМенеджера.Найти(Событие) <> Неопределено Тогда
			
			Результат = ТекстМенеджер;
			
		Иначе
			
			Результат = ТекстНаборЗаписей;
			
		КонецЕсли;
		
	ИначеЕсли ЭтоПеречисление(Имя)
		ИЛИ ЭтоОбработка(Имя)
		ИЛИ ЭтоОтчет(Имя)
		ИЛИ ЭтоКонстанта(Имя)
		ИЛИ ЭтоКритерийОтбора(Имя) Тогда
		
		Результат = ТекстМенеджер;
		
	ИначеЕсли ЭтоПоследовательность(Имя) Тогда
		
		Результат = ТекстНаборЗаписей;
		
	Иначе
		
		Результат = ТекстОбъект;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает ссылку на общий модуль по имени.
//
// Параметры:
//  Имя          - Строка - имя общего модуля, например:
//                 "ОбщегоНазначения",
//                 "ОбщегоНазначенияКлиент".
//
// Возвращаемое значение:
//  ОбщийМодуль - общий модуль.
//
Функция ОбщийМодуль(Имя) Экспорт
	
	Если ИТКВ_Строки.НекорректныйИдентификатор(Имя) Тогда
		ВызватьИсключение "Некорректное имя модуля";
	КонецЕсли;
	
	Если НЕ ИТКВ_МетаданныеВызовСервера.СуществуетОбщийМодуль(Имя) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	// Опасности не представляет т.к. это должен быть идентификатор и это проверяется выше
	// BSLLS:ExecuteExternalCodeInCommonModule-off
	Результат = Вычислить(Имя);
	// BSLLS:ExecuteExternalCodeInCommonModule-on
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяОбъектаСправочник(Язык = "ru")
	
	Возврат НСтр("ru = 'Справочник'; en = 'Catalog'", Язык);
	
КонецФункции

Функция ИмяОбъектаДокумент(Язык = "ru")
	
	Возврат НСтр("ru = 'Документ'; en = 'Document'", Язык);
	
КонецФункции

Функция ИмяОбъектаПеречисление(Язык = "ru")
	
	Возврат НСтр("ru = 'Перечисление'; en = 'Enum'", Язык);
	
КонецФункции

Функция ИмяОбъектаКонстанта(Язык = "ru")
	
	Возврат НСтр("ru = 'Константа'; en = 'Constant'", Язык);
	
КонецФункции

Функция ИмяОбъектаЖурналДокументов(Язык = "ru")
	
	Возврат НСтр("ru = 'ЖурналДокументов'; en = 'DocumentJournal'", Язык);
	
КонецФункции

Функция ИмяОбъектаКритерийОтбора(Язык = "ru")
	
	Возврат НСтр("ru = 'КритерийОтбора'; en = 'FilterCriterion'", Язык);
	
КонецФункции

Функция ИмяОбъектаПланОбмена(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланОбмена'; en = 'ExchangePlan'", Язык);
	
КонецФункции

Функция ИмяОбъектаПоследовательность(Язык = "ru")
	
	Возврат НСтр("ru = 'Последовательность'; en = 'Sequence'", Язык);
	
КонецФункции

Функция ИмяОбъектаПланВидовХарактеристик(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланВидовХарактеристик'; en = 'ChartOfCharacteristicTypes'", Язык);
	
КонецФункции

Функция ИмяОбъектаПланВидовРасчета(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланВидовРасчета'; en = 'ChartOfCalculationTypes'", Язык);
	
КонецФункции

Функция ИмяОбъектаПланСчетов(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланСчетов'; en = 'ChartOfAccounts'", Язык);
	
КонецФункции

Функция ИмяОбъектаРегистрСведений(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрСведений'; en = 'InformationRegister'", Язык);
	
КонецФункции

Функция ИмяОбъектаРегистрНакопления(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрНакопления'; en = 'AccumulationRegister'", Язык);
	
КонецФункции

Функция ИмяОбъектаРегистрБухгалтерии(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрБухгалтерии'; en = 'AccountingRegister'", Язык);
	
КонецФункции

Функция ИмяОбъектаРегистрРасчета(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрРасчета'; en = 'CalculationRegister'", Язык);
	
КонецФункции

Функция ИмяОбъектаБизнесПроцесс(Язык = "ru")
	
	Возврат НСтр("ru = 'БизнесПроцесс'; en = 'BusinessProcess'", Язык);
	
КонецФункции

Функция ИмяОбъектаЗадача(Язык = "ru")
	
	Возврат НСтр("ru = 'Задача'; en = 'Task'", Язык);
	
КонецФункции

Функция ИмяОбъектаОбщийМодуль(Язык = "ru")
	
	Возврат НСтр("ru = 'ОбщийМодуль'; en = 'CommonModule'", Язык);
	
КонецФункции

Функция ИмяОбъектаОбработка(Язык = "ru")
	
	Возврат НСтр("ru = 'Обработка'; en = 'DataProcessor'", Язык);
	
КонецФункции

Функция ИмяОбъектаОтчет(Язык = "ru")
	
	Возврат НСтр("ru = 'Отчет'; en = 'Report'", Язык);
	
КонецФункции

Функция ИмяОбъектаХранилищеНастроек(Язык = "ru")
	
	Возврат НСтр("ru = 'ХранилищеНастроек'; en = 'SettingsStorage'", Язык);
	
КонецФункции

Функция ИмяКоллекцииСправочники(Язык = "ru")
	
	Возврат НСтр("ru = 'Справочники'; en = 'Catalogs'", Язык);
	
КонецФункции

Функция ИмяКоллекцииДокументы(Язык = "ru")
	
	Возврат НСтр("ru = 'Документы'; en = 'Documents'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПеречисления(Язык = "ru")
	
	Возврат НСтр("ru = 'Перечисления'; en = 'Enums'", Язык);
	
КонецФункции

Функция ИмяКоллекцииКонстанты(Язык = "ru")
	
	Возврат НСтр("ru = 'Константы'; en = 'Constants'", Язык);
	
КонецФункции

Функция ИмяКоллекцииЖурналыДокументов(Язык = "ru")
	
	Возврат НСтр("ru = 'ЖурналыДокументов'; en = 'DocumentJournals'", Язык);
	
КонецФункции

Функция ИмяКоллекцииКритерииОтбора(Язык = "ru")
	
	Возврат НСтр("ru = 'КритерииОтбора'; en = 'FilterCriteria'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПланыОбмена(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланыОбмена'; en = 'ExchangePlans'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПоследовательности(Язык = "ru")
	
	Возврат НСтр("ru = 'Последовательности'; en = 'Sequences'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПланыВидовХарактеристик(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланыВидовХарактеристик'; en = 'ChartsOfCharacteristicTypes'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПланыВидовРасчета(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланыВидовРасчета'; en = 'ChartsOfCalculationTypes'", Язык);
	
КонецФункции

Функция ИмяКоллекцииПланыСчетов(Язык = "ru")
	
	Возврат НСтр("ru = 'ПланыСчетов'; en = 'ChartsOfAccounts'", Язык);
	
КонецФункции

Функция ИмяКоллекцииРегистрыСведений(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрыСведений'; en = 'InformationRegisters'", Язык);
	
КонецФункции

Функция ИмяКоллекцииРегистрыНакопления(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрыНакопления'; en = 'AccumulationRegisters'", Язык);
	
КонецФункции

Функция ИмяКоллекцииРегистрыБухгалтерии(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрыБухгалтерии'; en = 'AccountingRegisters'", Язык);
	
КонецФункции

Функция ИмяКоллекцииРегистрыРасчета(Язык = "ru")
	
	Возврат НСтр("ru = 'РегистрыРасчета'; en = 'CalculationRegisters'", Язык);
	
КонецФункции

Функция ИмяКоллекцииБизнесПроцессы(Язык = "ru")
	
	Возврат НСтр("ru = 'БизнесПроцессы'; en = 'BusinessProcesses'", Язык);
	
КонецФункции

Функция ИмяКоллекцииТочкиМаршрутаБизнесПроцесса(Язык = "ru")
	
	Возврат НСтр("ru = 'ТочкиМаршрутаБизнесПроцесса'; en = 'BusinessProcessRoutePoints'", Язык);
	
КонецФункции

Функция ИмяКоллекцииЗадачи(Язык = "ru")
	
	Возврат НСтр("ru = 'Задачи'; en = 'Tasks'", Язык);
	
КонецФункции

Функция ИмяКоллекцииОбщиеМодули(Язык = "ru")
	
	Возврат НСтр("ru = 'ОбщиеМодули'; en = 'CommonModules'", Язык);
	
КонецФункции

Функция ИмяКоллекцииОбработки(Язык = "ru")
	
	Возврат НСтр("ru = 'Обработки'; en = 'DataProcessors'", Язык);
	
КонецФункции

Функция ИмяКоллекцииОтчеты(Язык = "ru")
	
	Возврат НСтр("ru = 'Отчеты'; en = 'Reports'", Язык);
	
КонецФункции

Функция ИмяКоллекцииХранилищаНастроек(Язык = "ru")
	
	Возврат НСтр("ru = 'ХранилищаНастроек'; en = 'SettingsStorages'", Язык);
	
КонецФункции

#КонецОбласти
