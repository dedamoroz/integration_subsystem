#Область ПрограммныйИнтерфейс

// Вычисляет значение выражения на встроенном языке
//
// Параметры:
//  Алгоритм  - Строка - Алгоритм на встроенном языке
//  Комментарий  - Строка - Комментарий
//
// Возвращаемое значение:
//   Произвольный - Результат вычисления выражения на встроенном языке
//
Функция ВычислитьВыражениеНаВстроенномЯзыке(Алгоритм, Комментарий) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		
		Результат = ИТКВ_Общий.ВычислитьРезультатВыражениеВБезопасномРежиме(Алгоритм);
		
	Исключение
		
		ОписаниеОшибки = ИнформацияОбОшибке().Причина.Описание;
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = СтрШаблон(НСтр("ru = 'Вычисление выражения (%1):
		|%2
		|Ошибка: %3'; en = 'The computation of the expression (%1):
		|%2
		|Error: %3'"), Комментарий, Алгоритм, ОписаниеОшибки);
		СообщениеПользователю.Сообщить();
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Получает адрес таблицы в расшифровки
//
// Параметры:
//  АдресДанныхРасшифровки  - Адрес - Адрес данных расшифровки во временном хранилище
//  ЗначениеРасшифровки  - Произвольный - Значение расшифровки
//
// Возвращаемое значение:
//   Строка - Адрес таблицы значений в расшифровке
//
Функция АдресТаблицыЗначенийПоРасшифровке(АдресДанныхРасшифровки, ЗначениеРасшифровки) Экспорт
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	ТаблицаЗначений = ДанныеРасшифровки[ЗначениеРасшифровки].Выгрузить();
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗначений);
	
КонецФункции

// Получает момент времени
//
// Параметры:
//   Дата - Дата - Дата
//   Ссылка - Ссылка - Ссылка (необязательный)
//
// Возвращаемое значение:
//   МоментВремени	- Момент времени
//
Функция НовыйМоментВремени(Дата, Ссылка = Неопределено) Экспорт
	
	Возврат Новый МоментВремени(Дата, Ссылка);
	
КонецФункции

// Получает момент времени
//
// Параметры:
//   Адрес - Строка - Адрес таблицы значений во временном хранилище
//   УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор к которому привязывается временное хранилище
//
// Возвращаемое значение:
//   Строка, Неопределено - Адрес таблицы значений во временном хранилище, Неопределено - в случае ошибки
//
Функция КопияТаблицыЗначений(Адрес, УникальныйИдентификатор) Экспорт
	
	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		
		ТаблицаЗначений = ПолучитьИзВременногоХранилища(Адрес);
		Результат = ИТКВ_ВременноеХранилище.Поместить(ТаблицаЗначений.Скопировать(), , УникальныйИдентификатор);
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяТекущегоПользователяИБ() Экспорт
	
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
КонецФункции

Функция ИнформационнаяБазаФайловая() Экспорт
	
	СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы();
	Возврат СтрНайти(ВРег(СтрокаСоединенияИнформационнойБазы), "FILE=") = 1;
	
КонецФункции

Функция ВариантВстроенногоЯзыкаРусский() Экспорт
	
	Возврат ИТКВ_Общий.ВариантВстроенногоЯзыкаРусский();
	
КонецФункции

// Возвращает текущую дату сеанса
//
// Возвращаемое значение:
//   Дата - Текущая дата сеанса
//
Функция ТекущаяДатаСервера() Экспорт
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

Процедура ПодключитьСтандартнуюОбработку(Имя) Экспорт
	
	Путь = СтрШаблон("v8res://mngbase/%1.epf", Имя);
	
	// Вызываются стандартные обработки от 1С опасности не представляет
	// BSLLS:UsingExternalCodeTools-off
	ВнешниеОбработки.Подключить(Путь, Имя, Ложь);
	// BSLLS:UsingExternalCodeTools-on
	
КонецПроцедуры

Функция ИнформацияДляТехническойПоддержки() Экспорт
	
	Возврат ИТКВ_Общий.ИнформацияДляТехническойПоддержки();
	
КонецФункции

Функция КодЯзыкаПрограммирования() Экспорт
	
	ИТКВ_Общий.КодЯзыкаПрограммирования();
	
КонецФункции

#КонецОбласти
