#Область ПрограммныйИнтерфейс

// Возвращает имя базы на сервере СУБД
//
// Возвращаемое значение:
//   Строка	- имя базы, Неопределено - файловая база
//
Функция ИмяИнформационнойБазы() Экспорт
	
	СтрокаПодключения = СтрокаСоединенияИнформационнойБазы();
	
	Индекс = 1;
	Если ИТКВ_Строки.РазборНайтиТекст(СтрокаПодключения, "Ref=", Индекс) Тогда
		
		СимволБлока = ИТКВ_Строки.РазборПрочитатьСимвол(СтрокаПодключения, Индекс);
		Возврат ИТКВ_Строки.РазборПрочитатьДоСимвола(СтрокаПодключения, СимволБлока, Индекс);
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция КартинкаБиблиотеки(Имя) Экспорт
	
	Попытка
		
		Результат = БиблиотекаКартинок[Имя];
		
	Исключение
		
		ВызватьИсключение СтрШаблон("Картинка с именем %1 в библиотеке не найдена", Имя);
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ВнешняяКомпонентаДиагностикиКонтекста() Экспорт
	
	Результат = ПодключитьВнешнююКомпонентуИзОбщегоМакета("ИТКВ_yy_YellowDiagnostician", "YY", "YellowDiagnostician");
	Возврат Результат;
	
КонецФункции

Функция СтруктураХраненияБазыДанных() Экспорт
	
	Результат = ПолучитьСтруктуруХраненияБазыДанных();
	
	// Дополним данные структуры
	Результат.Колонки.Добавить("Индекс", ИТКВ_ТипыКлиентСервер.ОписаниеСтрока(10));
	Для Каждого Строка Из Результат Цикл
		
		Строка.Индекс = ИТКВ_Строки.ИндексИдентификатора(Строка.ИмяТаблицыХранения);
		
	КонецЦикла;
	Результат.Индексы.Добавить("Индекс");
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеИзмеренийНабораЗаписейРегистраСведений(Имя) Экспорт
	
	Результат = Новый Массив;
	
	ОбъектМетаданных = Метаданные.РегистрыСведений[Имя];
	
	ПериодичностьОбъектаМетаданных = ОбъектМетаданных.ПериодичностьРегистраСведений;
	Периодичность = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений;
	
	Если ПериодичностьОбъектаМетаданных = Периодичность.Год Тогда
		
		Формат = "ДФ=yyyy";
		
	ИначеЕсли ПериодичностьОбъектаМетаданных = Периодичность.День Тогда
		
		Формат = "ДЛФ=D";
		
	ИначеЕсли ПериодичностьОбъектаМетаданных = Периодичность.Квартал Тогда
		
		Формат =  НСтр("ru = 'ДФ=''к """"квартал"""" yyyy'''; en = 'ДФ=''к """"quarter"""" yyyy'''");
		
	ИначеЕсли ПериодичностьОбъектаМетаданных = Периодичность.Месяц Тогда
		
		Формат = "ДФ='ММММ yyyy'";
		
	ИначеЕсли ПериодичностьОбъектаМетаданных = Периодичность.Секунда Тогда
		
		Формат = "ДЛФ=DT";
		
	Иначе
		
		Формат = "";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Формат) Тогда
		
		ОписаниеИзмерения = Новый Структура;
		ОписаниеИзмерения.Вставить("Ключ", "Период");
		Формат = Формат + "; ДП='" + НСтр("ru = 'Дата не задана'; en = 'Date not set'") + "'";
		ОписаниеИзмерения.Вставить("Формат", Формат);
		
		Результат.Добавить(ОписаниеИзмерения);
		
	КонецЕсли;
	
	// Добавляем измерения
	Для Каждого Измерение Из ОбъектМетаданных.Измерения Цикл
				
		Результат.Добавить(Измерение.Имя);
				
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеФункции

Функция ПодключитьВнешнююКомпонентуИзОбщегоМакета(ИмяМакета, ИмяКомпоненты, Имя)
	
	ДанныеКомпоненты = ПолучитьОбщийМакет(ИмяМакета);
	АдресКомпоненты = ПоместитьВоВременноеХранилище(ДанныеКомпоненты);
	
	ПолноеИмяКомпоненты = СтрШаблон("%1.%2", ИмяКомпоненты, Имя);
	Попытка
		
		ПодключитьВнешнююКомпоненту(АдресКомпоненты, ИмяКомпоненты, ТипВнешнейКомпоненты.Native);
		Результат = Новый("AddIn." + ПолноеИмяКомпоненты);
		
	Исключение
		
		Шаблон = "Ошибка при инициализации компоненты: %1, ошибка: %2";
		ВызватьИсключение СтрШаблон(Шаблон, ПолноеИмяКомпоненты, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
