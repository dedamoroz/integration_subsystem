#Область ПрограммныйИнтерфейс

Процедура ОткрытьИнструмент(Инструмент, Параметр = Неопределено) Экспорт
	
	Если Инструмент = ИТКВ_Перечисления.ИнструментОткрытьОбъект() Тогда
		
		ПоказатьЗначение( , Параметр);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	Если Инструмент = ИТКВ_Перечисления.ИнструментКонсольЗапросов() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_КонсольРазработчика.Форма";
		ПараметрыФормы.Вставить("Команда", "КонсольЗапросов");
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментКонсольСхемКомпоновкиДанных() Тогда
		
		ПараметрыФормы.Вставить("Команда", "КонсольСКД");
		ПолноеИмяФормы = "Обработка.ИТКВ_КонсольРазработчика.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментКонсольКода() Тогда
		
		ПараметрыФормы.Вставить("Команда", "КонсольКода");
		ПолноеИмяФормы = "Обработка.ИТКВ_КонсольРазработчика.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПодпискиНаСобытия() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_ПодпискиНаСобытия.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментАнализПравДоступа() Тогда
		
		ПолноеИмяФормы = "Отчет.ИТКВ_АнализПравДоступа.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментСравнениеОбъектов() Тогда
		
		ПолноеИмяФормы = "Отчет.ИТКВ_СравнениеОбъектов.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПоискИЗаменаСсылок() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_ПоискИЗаменаСсылок.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПоискСсылокНаОбъект() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_ПоискСсылокНаОбъект.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПользователи() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_Пользователи.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментРегламентныеИФоновыеЗадания() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_РегламентныеИФоновыеЗадания.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментРедакторКонстант() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_РедакторКонстант.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментРедакторОбъекта() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_РедакторОбъекта.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментРедакторПараметровСеанса() Тогда
		
		ПолноеИмяФормы = "Обработка.ИТКВ_РедакторПараметровСеанса.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментМониторЛицензий() Тогда
		
		ПолноеИмяФормы = "Отчет.ИТКВ_МониторЛицензий.Форма";
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментЖурналРегистрации() Тогда
		
		ПолноеИмяФормы = ИТКВ_БСПВызовСервера.ПолноеИмяФормыСтандартнойОбработки("ЖурналРегистрации");
		
	КонецЕсли;
	
	Уникальность = Истина;
	ЗаполнитьПараметрыЗапускаИнструмента(Инструмент, ПараметрыФормы, Параметр, Уникальность);

	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, , Уникальность, , , , РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

Функция ПоказатьПредупреждениеНедоступноВОграниченнойВерсии() Экспорт
	
	Если ИТКВ_ТуллкитКлиентСервер.ОграниченнаяВерсия() Тогда
		
		Результат = Истина;
		
		ТекстПредупреждения = НСтр("ru = 'Данная функция недоступна в вашей версии (ADMIN)'; en = 'This function is not available in your version (ADMIN)'");
		ПоказатьПредупреждение( , ТекстПредупреждения, , ИТКВ_ТуллкитКлиентСервер.Представление());
		
	Иначе
		
		Результат = Ложь;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыЗапускаИнструмента(Инструмент, ПараметрыФормы, Параметр, Уникальность)
	
	Если Параметр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Инструмент = ИТКВ_Перечисления.ИнструментПоискИЗаменаСсылок() Тогда
		
		ПараметрыФормы.Вставить("Ссылки", СписокСсылокИнструмента(Параметр));
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментСравнениеОбъектов() Тогда
		
		СформироватьПриОткрытии = ПараметрСписокСсылокИнструмента(Параметр)
										И Параметр.Количество() > 1;
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", СформироватьПриОткрытии);
		
		ПараметрыФормы.Вставить("Ссылки", СписокСсылокИнструмента(Параметр));
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПоискСсылокНаОбъект()
				ИЛИ Инструмент = ИТКВ_Перечисления.ИнструментРедакторОбъекта()Тогда
		
		ПараметрыФормы.Вставить("Объект", Параметр);
		Уникальность = Параметр.УникальныйИдентификатор();
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментЖурналРегистрации() Тогда
		
		ПараметрыФормы.Вставить("Данные", Параметр);
		Уникальность = Параметр.УникальныйИдентификатор();
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментАнализПравДоступа() Тогда
		
		СформироватьПриОткрытии = (Параметр <> Неопределено);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", СформироватьПриОткрытии);
		
		ОтборМетаданных = ИТКВ_ФормаВызовСервера.ОтборПоТипамСсылок(Параметр);
		ПараметрыФормы.Вставить("ОтборМетаданных", ОтборМетаданных);
		
	ИначеЕсли Инструмент = ИТКВ_Перечисления.ИнструментПодпискиНаСобытия() Тогда
		
		ОтборМетаданных = ИТКВ_ФормаВызовСервера.ОтборПоТипамСсылок(Параметр);
		ПараметрыФормы.Вставить("ОтборМетаданных", ОтборМетаданных);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СписокСсылокИнструмента(Параметр)
	
	Если ТипЗнч(Параметр) = Тип("СписокЗначений") Тогда
		
		Результат = Параметр.ВыгрузитьЗначения();
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("Массив") Тогда
		
		Результат = Параметр;
		
	Иначе
		
		Результат = Новый Массив;
		Результат.Добавить(Параметр);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПараметрСписокСсылокИнструмента(Параметр)
	
	Результат = ТипЗнч(Параметр) = Тип("СписокЗначений")
					ИЛИ ТипЗнч(Параметр) = Тип("Массив");
					
	Возврат Результат;
	
КонецФункции

#КонецОбласти
